#
# Make file for windows version of FBZX Wii
# 
#---------------------------------------------------------------------------------
# Clear the implicit built in rules
#---------------------------------------------------------------------------------
.SUFFIXES:
#---------------------------------------------------------------------------------

export PATH	:= /c/devkitPro/MinGW/bin:$(PATH)
export CC	:= gcc
export SHELL=/bin/bash
	
#---------------------------------------------------------------------------------
%.o: %.c
	@echo $(notdir $<)
	@$(CC) $(CFLAGS) -c $< -o $@

#---------------------------------------------------------------------------------
%.exe:
	@echo linking ... $(notdir $@)
	@$(LD)  $^ $(LDFLAGS) $(LIBPATHS) $(LIBS) -o $@



#---------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# INCLUDES is a list of directories containing extra header files
#---------------------------------------------------------------------------------
TARGET		:=	fbzx-wii
BUILD		:=	build
SOURCES		:=	src src/z80free src/minizip src/rzx_lib
DATA		:=	 
INCLUDES	:=

#---------------------------------------------------------------------------------
# options for code generation
#---------------------------------------------------------------------------------

CFLAGS	= -g -O2 -Wall $(INCLUDE) -Wno-pointer-sign -Wno-unused-but-set-variable -DBYTE_ORDER=LITTLE_ENDIAN -DMINGW
CXXFLAGS	=	$(CFLAGS)

LDFLAGS	=	-g -Wl,-Map,$(notdir $@).map 

#---------------------------------------------------------------------------------
# any extra libraries we wish to link with the project
#---------------------------------------------------------------------------------
LIBS	:=	 -lmingw32 -lSDLmain -lSDL -lSDL_image -lSDL_ttf -lz 

#---------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level containing
# include and lib
#---------------------------------------------------------------------------------
LIBDIRS	:= 

#---------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add additional
# rules for different file extensions
#---------------------------------------------------------------------------------
ifneq ($(BUILD),$(notdir $(CURDIR)))
#---------------------------------------------------------------------------------

export OUTPUT	:=	$(CURDIR)/$(TARGET)

export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir)) \
					$(foreach dir,$(DATA),$(CURDIR)/$(dir))

export DEPSDIR	:=	$(CURDIR)/$(BUILD)

#---------------------------------------------------------------------------------
# automatically build a list of object files for our project
#---------------------------------------------------------------------------------
CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c)))
CFILES 		:=  $(filter-out z80free_tester.c, $(CFILES))
CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp)))
sFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.s)))
SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.S)))
BINFILES	:=	$(foreach dir,$(DATA),$(notdir $(wildcard $(dir)/*.*)))

#---------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#---------------------------------------------------------------------------------
ifeq ($(strip $(CPPFILES)),)
	export LD	:=	$(CC)
else
	export LD	:=	$(CXX)
endif

export OFILES	:=	$(addsuffix .o,$(BINFILES)) \
					$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) \
					$(sFILES:.s=.o) $(SFILES:.S=.o)

#---------------------------------------------------------------------------------
# build a list of include paths
#---------------------------------------------------------------------------------
export INCLUDE	:=	$(foreach dir,$(INCLUDES), -iquote $(CURDIR)/$(dir)) \
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \
					-I$(CURDIR)/$(BUILD)

#---------------------------------------------------------------------------------
# build a list of library paths
#---------------------------------------------------------------------------------
export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib) -L

export OUTPUT	:=	$(CURDIR)/$(TARGET)
.PHONY: $(BUILD) clean

#---------------------------------------------------------------------------------
$(BUILD):
	@[ -d $@ ] || mkdir -p $@
	@make --no-print-directory -C $(BUILD) -f $(CURDIR)/Makefile.win

#---------------------------------------------------------------------------------
clean:
	@echo clean ...
	@rm -fr $(BUILD) $(OUTPUT).exe dist

#---------------------------------------------------------------------------------


dist: $(BUILD)
	rm -fr $@
	mkdir -p $@/fbzx-wii/fbzx
	mkdir -p $@/fbzx-wii/spectrum-roms
	mkdir -p $@/fbzx-wii/tapes
	mkdir -p $@/fbzx-wii/snapshots
	mkdir -p $@/fbzx-wii/snapshots/rom-cartridges
	mkdir -p $@/fbzx-wii/microdrives
	mkdir -p $@/fbzx-wii/scr
	mkdir -p $@/fbzx-wii/scr2
	mkdir -p $@/fbzx-wii/configurations
	mkdir -p $@/fbzx-wii/poke
	mkdir -p $@/fbzx-wii/doc
	mkdir -p $@/fbzx-wii/fbzx/allophones
	cp fbzx-wii.exe $@/fbzx-wii/fbzx-wii.exe
	cp meta.xml $@/fbzx-wii/meta.xml
	cp spectrum-roms/* $@/fbzx-wii/spectrum-roms
	cp dll/* $@/fbzx-wii
	cp images/keymap.bmp $@/fbzx-wii/fbzx
	cp images/Spectrum_keyboard.png $@/fbzx-wii/fbzx
	cp images/symbol_shift.png $@/fbzx-wii/fbzx
	cp images/caps_shift.png $@/fbzx-wii/fbzx
	cp images/Spectrum_keyboard_small.png $@/fbzx-wii/fbzx
	cp images/symbol_shift_small.png $@/fbzx-wii/fbzx
	cp images/caps_shift_small.png $@/fbzx-wii/fbzx
	cp images/ZXSpectrum48k.png $@/fbzx-wii/fbzx
	cp images/stripes.png $@/fbzx-wii/fbzx
	cp images/stripes_small.png $@/fbzx-wii/fbzx
	cp images/ZX_Spectrum.ttf $@/fbzx-wii/fbzx
	cp images/FreeMono.ttf $@/fbzx-wii/fbzx
	cp sound/menu_navigation_LE.raw $@/fbzx-wii/fbzx
	cp sound/select_LE.raw $@/fbzx-wii/fbzx
	cp sound/unselect_LE.raw $@/fbzx-wii/fbzx	
	cp fbzx.net $@/fbzx-wii
	cp AMSTRAD CAPABILITIES COPYING FAQ README README.TZX VERSIONS VERSIONS.wii README_WIN.txt $@/fbzx-wii/doc
	cp allophones/*.* $@/fbzx-wii/fbzx/allophones
	touch $@/fbzx-wii/tapes/dummy
	touch $@/fbzx-wii/snapshots/dummy
	touch $@/fbzx-wii/snapshots/rom-cartridges/dummy
	touch $@/fbzx-wii/microdrives/dummy
	touch $@/fbzx-wii/scr/dummy
	touch $@/fbzx-wii/scr2/dummy
	touch $@/fbzx-wii/configurations/dummy
	touch $@/fbzx-wii/poke/dummy
	cd $@ && tar -czf ../fbzx-wii-windows-v-bin.tar.gz *

distsource:
	cd .. && cp -r fbzx-wii fbzx-wii-v
	cd ../fbzx-wii-v && find . -name ".svn" | xargs rm -rf
	cd .. && tar -czf fbzx-wii-v.tar.gz fbzx-wii-v
	cd .. && rm -fr fbzx-wii-v


#---------------------------------------------------------------------------------
else

DEPENDS	:=	$(OFILES:.o=.d)

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
$(OUTPUT).exe: $(OFILES)

#---------------------------------------------------------------------------------
# This rule links in binary data with the .jpg extension
#---------------------------------------------------------------------------------
%.jpg.o	:	%.jpg
#---------------------------------------------------------------------------------
	@echo $(notdir $<)
	$(bin2o)

-include $(DEPENDS)

#---------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------
